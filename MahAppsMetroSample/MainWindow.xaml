<mahAppsMetroSample:CustomBaseMetroWindow x:Class="MahAppsMetroSample.MainWindow"
                                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                          xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                                          xmlns:mahAppsMetroSample="clr-namespace:MahAppsMetroSample"
                                          xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                                          Title="MainWindow"
                                          Width="525"
                                          Height="350"
                                          GlowColor="Black">

    <Window.Resources>
        <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />

        <Style BasedOn="{StaticResource {x:Type xctk:SelectorItem}}" TargetType="{x:Type xctk:SelectorItem}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
            <Setter Property="BorderThickness" Value="0" />

            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:SelectorItem}">
                        <Grid Margin="0 0.5" Background="{TemplateBinding Background}">
                            <Border x:Name="_background"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <CheckBox Margin="0.5 0"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                      IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
                                <Setter TargetName="_background" Property="Background"
                                        Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="_background" Property="Background"
                                        Value="{DynamicResource MahApps.Brushes.Accent2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Background"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Grid Margin="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="0"
                                                      MinWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
                                </Grid.ColumnDefinitions>

                                <TextBox Margin="1"
                                         Padding="{TemplateBinding Padding}"
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Cursor="Arrow"
                                         Focusable="False"
                                         HorizontalScrollBarVisibility="Hidden"
                                         IsReadOnly="True"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                         Text="{TemplateBinding Content}"
                                         VerticalScrollBarVisibility="Hidden" />
                                <Grid x:Name="ArrowBackground"
                                      Grid.Column="1"
                                      Background="Transparent">
                                    <Path x:Name="Arrow"
                                          Width="8"
                                          Height="4"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Fill="{DynamicResource MahApps.Brushes.Gray1}"
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Stretch="Uniform" />
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="ArrowBackground" Property="IsMouseOver" Value="True">
                                <Setter TargetName="ArrowBackground" Property="Background"
                                        Value="{DynamicResource MahApps.Brushes.Gray5}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Background" Property="Background"
                                        Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Background" Property="Background"
                                        Value="{DynamicResource MahApps.Brushes.Gray7}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style BasedOn="{StaticResource {x:Type xctk:CheckComboBox}}" TargetType="{x:Type xctk:CheckComboBox}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Controls:ControlsHelper.FocusBorderBrush"
                    Value="{DynamicResource MahApps.Brushes.ComboBox.Border.Focus}" />
            <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush"
                    Value="{DynamicResource MahApps.Brushes.ComboBox.Border.MouseOver}" />
            <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
            <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="MinHeight" Value="26" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:CheckComboBox}">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Focusable="False"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False">
                                <Grid MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                      MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border x:Name="DropDownBorder"
                                            Height="Auto"
                                            Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                                            BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                    <ScrollViewer x:Name="DropDownScrollViewer"
                                                  Padding="1"
                                                  BorderThickness="0">
                                        <ItemsPresenter x:Name="PART_ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <ToggleButton x:Name="PART_DropDownButton"
                                          Margin="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalAlignment="Stretch"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Style="{DynamicResource CheckComboBoxToggleButton}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Content="{TemplateBinding Text}"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsHitTestVisible="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <Border x:Name="FocusBorder"
                                    Background="{x:Null}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Visibility="Collapsed" />
                            <Border x:Name="DisabledVisualElement"
                                    Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                    BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="0.6"
                                    IsHitTestVisible="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Visibility="Collapsed" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="FocusBorder" Property="BorderBrush"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="FocusBorder" Property="BorderBrush"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="FocusBorder" Property="BorderBrush"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <Grid>

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Center"
                       FontSize="30"
                       Text="Modern UI with MahApps.Metro" />
            <Button Margin="5"
                    HorizontalAlignment="Left"
                    Click="ButtonBase_OnClick"
                    Content="Click Me..." />
            <StackPanel Orientation="Horizontal">
                <xctk:CheckComboBox Width="200" ItemsSource="{Binding TestColl}" />
                <ComboBox Width="200" ItemsSource="{Binding TestColl}" />
            </StackPanel>
            <Controls:ToggleSwitch Grid.Row="1"
                                   Grid.Column="9"
                                   Margin="100 0 50 0"
                                   IsOn="True" />
            <!-- BorderBrush="#FF898989" -->
            <!-- IsChecked="True" -->
            <!-- OffSwitchBrush="#FFB4B4B4" -->
            <!-- OnSwitchBrush="YellowGreen" -->
            <!-- ThumbIndicatorBrush="Black" -->
            <!-- ThumbIndicatorDisabledBrush="Gray" /> -->
            <!--  <TextBox Text="Lorem ipsum dolor sit amet, consetetur sadipscing"  -->
            <!--  HorizontalAlignment="Left"  -->
            <!--  Margin="5" />  -->
            <!--  <CheckBox Content="ToggleFullScreen"  -->
            <!--  IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=ToggleFullScreen}"  -->
            <!--  Margin="5" />  -->
        </StackPanel>

    </Grid>
</mahAppsMetroSample:CustomBaseMetroWindow>